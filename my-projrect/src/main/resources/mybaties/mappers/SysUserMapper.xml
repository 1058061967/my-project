<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.manage.mapper.SysUserMapper">
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="String">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="int">
		select m.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="selectUserByName" resultType="SysUser">
		select * from sys_user where user_name = #{userName}
	</select>
	
	<update id="updatePassword" parameterType="map">
		UPDATE
			 sys_user
	    SET   
	    	password = #{newPassword} 
		WHERE 
			user_id = #{userId}
		AND 
			password = #{password}
	</update>
	
	<delete id="batchDelete">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
	<sql id="pagingLimit">
		<include refid="com.manage.mapper.CommonMapper.pagingLimit" />
	</sql>
	
    <sql id="userFilter">
 			<if test="filter.userName != null">
 				AND user.user_name like #{filter.userName,javaType=string,jdbcType=CHAR}
 			</if>			
    </sql>

	<select id="selectUserByFilter" 
			resultType="SysUser">
		SELECT 
				*
	    FROM
	    	 sys_user user
		<where>
			<include refid="userFilter"/>
		</where>
			<include refid="pagingLimit"/>
	</select>
		
		
	<select id="countUserByFilter"
			 resultType="int">
		SELECT
			 count(*) 
		FROM 
			 sys_user user
		<where>
			<include refid="userFilter"/>
		</where>
	</select>	
	
	<select id="selectUserById" resultType="SysUser">
		SELECT
				 * 
		FROM 
			sys_user 
		WHERE 
			user_id = #{userId,javaType=int,jdbcType=INTEGER}
	</select>
	
	
	<update id="updateUser" parameterType="SysUser">
		UPDATE
			 sys_user 
		<set> 
			<if test="userName != null">
				user_name = #{userName}, 
			</if>
			<if test="password != null">
				password = #{password},
		    </if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="mobile != null">
				mobile = #{mobile}, 
			</if>
			<if test="status != null">
				status = #{status}, 
			</if>
		</set>
		WHERE 
			user_id = #{userId,javaType=int,jdbcType=INTEGER}
	</update>	
	
	<insert id="createUser" 
			parameterType="SysUser" 
			useGeneratedKeys="true" 
			keyProperty="userId">
		insert into sys_user
		(
			user_id, 
			user_name, 
			password, 
			email, 
			mobile, 
			status, 
			create_time
		)
		values
		(
			#{userId,javaType=int,jdbcType=INTEGER}, 
			#{userName,javaType=string,jdbcType=CHAR}, 
			#{password,javaType=string,jdbcType=CHAR}, 
			#{email,javaType=string,jdbcType=CHAR}, 
			#{mobile,javaType=string,jdbcType=CHAR}, 
			#{status,javaType=int,jdbcType=INTEGER}, 
			#{createTime,javaType=date,jdbcType=TIMESTAMP}
		)
	</insert>	
			
</mapper>